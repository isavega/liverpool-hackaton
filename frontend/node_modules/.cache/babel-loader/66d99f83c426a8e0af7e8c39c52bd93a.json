{"ast":null,"code":"import postPublications from \"../../api/publications\";\nexport const postBike = (body, callback) => async dispatch => {\n  try {\n    const {\n      data\n    } = await postPublications(body);\n    const {\n      status: ob_status,\n      tenpo_user_id,\n      business_sii,\n      business_type: type\n    } = data;\n    dispatch({\n      type: CREATE_BUSINESS_USER,\n      businessUser: {\n        ob_status,\n        tenpo_user_id,\n        business_sii,\n        type\n      }\n    });\n    callback(data, null);\n  } catch (error) {\n    callback(null, error);\n  }\n};","map":{"version":3,"names":["postPublications","postBike","body","callback","dispatch","data","status","ob_status","tenpo_user_id","business_sii","business_type","type","CREATE_BUSINESS_USER","businessUser","error"],"sources":["/Users/isabel.vega/Desktop/Hackaton/hackaton-fin-app/src/store/actions/index.js"],"sourcesContent":["import postPublications from \"../../api/publications\";\n\nexport const postBike =\n  (body: Object, callback: (response: Object, error: Object) => void): Object =>\n  async (dispatch) => {\n    try {\n      const { data } = await postPublications(body);\n      const {\n        status: ob_status,\n        tenpo_user_id,\n        business_sii,\n        business_type: type,\n      } = data;\n      dispatch({\n        type: CREATE_BUSINESS_USER,\n        businessUser: { ob_status, tenpo_user_id, business_sii, type },\n      });\n      callback(data, null);\n    } catch (error) {\n      callback(null, error);\n    }\n  };\n"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,wBAA7B;AAEA,OAAO,MAAMC,QAAQ,GACnB,CAACC,IAAD,EAAeC,QAAf,KACA,MAAOC,QAAP,IAAoB;EAClB,IAAI;IACF,MAAM;MAAEC;IAAF,IAAW,MAAML,gBAAgB,CAACE,IAAD,CAAvC;IACA,MAAM;MACJI,MAAM,EAAEC,SADJ;MAEJC,aAFI;MAGJC,YAHI;MAIJC,aAAa,EAAEC;IAJX,IAKFN,IALJ;IAMAD,QAAQ,CAAC;MACPO,IAAI,EAAEC,oBADC;MAEPC,YAAY,EAAE;QAAEN,SAAF;QAAaC,aAAb;QAA4BC,YAA5B;QAA0CE;MAA1C;IAFP,CAAD,CAAR;IAIAR,QAAQ,CAACE,IAAD,EAAO,IAAP,CAAR;EACD,CAbD,CAaE,OAAOS,KAAP,EAAc;IACdX,QAAQ,CAAC,IAAD,EAAOW,KAAP,CAAR;EACD;AACF,CAnBI"},"metadata":{},"sourceType":"module"}